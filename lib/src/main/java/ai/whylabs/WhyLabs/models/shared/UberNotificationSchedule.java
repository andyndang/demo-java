/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ai.whylabs.WhyLabs.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UberNotificationSchedule - 
 * Combination of all possible schedule types, a hacky workaround for bugs in generated clients that use polymorphic types.
 * There are three types of schedules. Weekly, Daily, and Individual. You need to set the right fields for each one.
 * 
 * Weekly:
 *     enabled, cadence=WEEKLY, dayOfWeek, local24HourOfDay, localMinuteOfHour, localTimezone
 *     
 * Daily:
 *     enabled, cadence=DAILY, local24HourOfDay, localMinuteOfHour, localTimezone
 *     
 * Individual:
 *     enabled, cadence=INDIVIDUAL
 * 
 */

public class UberNotificationSchedule {
    @JsonProperty("cadence")
    public NotificationSqsMessageCadence cadence;

    public UberNotificationSchedule withCadence(NotificationSqsMessageCadence cadence) {
        this.cadence = cadence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dayOfWeek")
    public NotificationSettingsDay dayOfWeek;

    public UberNotificationSchedule withDayOfWeek(NotificationSettingsDay dayOfWeek) {
        this.dayOfWeek = dayOfWeek;
        return this;
    }
    
    @JsonProperty("enabled")
    public Boolean enabled;

    public UberNotificationSchedule withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("local24HourOfDay")
    public Integer local24HourOfDay;

    public UberNotificationSchedule withLocal24HourOfDay(Integer local24HourOfDay) {
        this.local24HourOfDay = local24HourOfDay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localMinuteOfHour")
    public Integer localMinuteOfHour;

    public UberNotificationSchedule withLocalMinuteOfHour(Integer localMinuteOfHour) {
        this.localMinuteOfHour = localMinuteOfHour;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localTimezone")
    public String localTimezone;

    public UberNotificationSchedule withLocalTimezone(String localTimezone) {
        this.localTimezone = localTimezone;
        return this;
    }
    
    public UberNotificationSchedule(@JsonProperty("cadence") NotificationSqsMessageCadence cadence, @JsonProperty("enabled") Boolean enabled) {
        this.cadence = cadence;
        this.enabled = enabled;
  }
}
