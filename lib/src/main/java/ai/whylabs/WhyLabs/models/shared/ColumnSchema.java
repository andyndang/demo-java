/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ai.whylabs.WhyLabs.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ColumnSchema - Column schema for a given column
 */

public class ColumnSchema {
    /**
     * We can classify these columns into various grouping. Currently we only support 'input' and 'output'
     */
    @JsonProperty("classifier")
    public String classifier;

    public ColumnSchema withClassifier(String classifier) {
        this.classifier = classifier;
        return this;
    }
    
    /**
     * The data type of the columns. Setting this field affects the default grouping (i.e integral columns)
     */
    @JsonProperty("dataType")
    public String dataType;

    public ColumnSchema withDataType(String dataType) {
        this.dataType = dataType;
        return this;
    }
    
    /**
     * Whether a column should be discrete or continuous. Changing this column will change the default grouping (discrete columns vs. continuous columns
     */
    @JsonProperty("discreteness")
    public String discreteness;

    public ColumnSchema withDiscreteness(String discreteness) {
        this.discreteness = discreteness;
        return this;
    }
    
    /**
     * Metadata tags for the column schema information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;

    public ColumnSchema withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    public ColumnSchema(@JsonProperty("classifier") String classifier, @JsonProperty("dataType") String dataType, @JsonProperty("discreteness") String discreteness) {
        this.classifier = classifier;
        this.dataType = dataType;
        this.discreteness = discreteness;
  }
}
