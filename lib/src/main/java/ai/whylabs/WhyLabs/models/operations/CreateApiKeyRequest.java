/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package ai.whylabs.WhyLabs.models.operations;

import ai.whylabs.WhyLabs.utils.SpeakeasyMetadata;
import com.fasterxml.jackson.annotation.JsonProperty;


public class CreateApiKeyRequest {
    /**
     * A human-friendly name for the API Key
     *  An object with key ID and other metadata about the key
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alias")
    public String alias;

    public CreateApiKeyRequest withAlias(String alias) {
        this.alias = alias;
        return this;
    }
    
    /**
     * Expiration time in epoch milliseconds
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=expiration_time")
    public Long expirationTime;

    public CreateApiKeyRequest withExpirationTime(Long expirationTime) {
        this.expirationTime = expirationTime;
        return this;
    }
    
    /**
     * Your company's unique organization ID
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=org_id")
    public String orgId;

    public CreateApiKeyRequest withOrgId(String orgId) {
        this.orgId = orgId;
        return this;
    }
    
    /**
     * Scopes of the token
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=scopes")
    public String[] scopes;

    public CreateApiKeyRequest withScopes(String[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
    /**
     * The unique user ID in an organization.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=user_id")
    public String userId;

    public CreateApiKeyRequest withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    public CreateApiKeyRequest(@JsonProperty("org_id") String orgId, @JsonProperty("user_id") String userId) {
        this.orgId = orgId;
        this.userId = userId;
  }
}
